name: Build executables

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Verify Python Installation
        run: |
          python --version
          pip --version
      
      # Linux / macOS venv + deps
      - name: Install Dependencies (Linux/Mac)
        if: runner.os != 'Windows'
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Windows venv + deps
      - name: Install Dependencies (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          python -m venv venv
          venv\Scripts\Activate.ps1
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # Linux / macOS build
      - name: Build Executable (Linux/Mac)
        if: runner.os != 'Windows'
        run: |
          source venv/bin/activate
          python build.py

      # Windows build
      - name: Build Executable (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          venv\Scripts\Activate.ps1
          python build.py

      # Upload executable to artifacts so all OS builds can share
      - name: Upload Executable Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-executable
          path: ./dist/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist_downloaded

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist_downloaded/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
